name: 'Build & Deploy'

on:
  release:
    types:
    - published
  push:
    branches:
      - dev

permissions:
  id-token: write
  contents: read

env:
  SERVER_CONTAINER_NAME: muse-queue-server
  RESOURCE_GROUP: use2-chci-ch-muse-rpa-rg

jobs:
  build_server:
    environment: development
    name: Build Server
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout repo'
        uses: actions/checkout@main

      - name: Get branch name
        shell: bash
        run: echo "branch_name=$(git branch --show-current)" >> $GITHUB_ENV
               
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Log into container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ vars.CONTAINER_REGISTRY }}
          username: ${{ vars.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ vars.CONTAINER_REGISTRY }}/${{ env.SERVER_CONTAINER_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=long
            type=semver,pattern={{raw}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./server/server.dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ vars.CONTAINER_REGISTRY }}/${{ env.SERVER_CONTAINER_NAME }}-cache:${{ env.branch_name || 'latest' }}
          cache-to: type=registry,ref=${{ vars.CONTAINER_REGISTRY }}/${{ env.SERVER_CONTAINER_NAME }}-cache:${{ env.branch_name || 'latest' }},mode=max

  deploy_dev:
    name: Deploy (Dev)
    needs: [ build_server ]
    runs-on: [ self-hosted, jump ]
    env:
      CONTAINER_APP: muse-queue-server-dev
    
    environment: development

    steps:
      - name: 'az cli login'
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ vars.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - name: deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update -n ${{ env.CONTAINER_APP }} -g ${{ env.RESOURCE_GROUP }} --container-name ${{ env.SERVER_CONTAINER_NAME }} --image uphschcich.azurecr.io/${{ env.SERVER_CONTAINER_NAME }}:sha-${{ github.sha }}
